/*
Задание до конца недели: прочитать внимательно(проштудировать, продурковать) письмо "расшаблонированные типы данных". 
В связи с тем, что кони не валялись, сроки сдвигаем на неделю. Нужно выучить, рисовать и копать то, что написано
в этом файле. 
Условие задачи: используя язык С++ получить прграмму, которая позволяет ввести с клавиатуры последовтельность действительных 
чисел, причём оканчивается числом 0 и сформировать в оперативной памяти списочкную структуру, элементы которой в инф части 
содержат действительные числа, причём формировать списочную структуру необходимо путём добавления очередного элемента не в хвост, а в голову.

*/
#include <iostream>

struct node {
    float info;
    node* ssylka;
};

int main() {
    node* head;
    node* curr;
    float sum;


    head = new node;
    std::cin >> head->info;
    head->ssylka = NULL;
    curr = head;
    while(curr->info) {
        curr = new node;
        std::cin >> curr->info;
        curr->ssylka = head;
        head = curr;
    }

    curr = head;
    head = curr->ssylka;
    delete curr;
    /*
    Добавление в голову - моделирование stack'a.

    Замечание. 
    На первом занятии говорилось, что запрещается использовать break, continue и тд. Будьте проще и к вам потянутся люди. 
    Если вы проверяете, было введено число ноль или нет, то никаких брейков! Оптимально сформировать список из нуля, удалить
    первый элемент и просто напросто перед выводом на экран проверить if(head == NULL) написать значение "Список пустой!",
    поставить else и так дальше.
    */
    
    curr = head;
    std::cout << "Элементы стэка: \n";
    if(curr == NULL) {
        std::cout << "Дедушка, вы редиска! Список пуст!\n";
    } else 
        while(curr != NULL) {
            std::cout << curr->info << " ";
            curr = curr->ssylka;
        }

    /*
    Задача.
    После того, как список создан, необходимо найти сумму элементов созданного списка.

    Если делать проверку на ноль в начале, то переменная head не получает значения.
    */
    sum = 0;
    curr = head;
    
    if(curr == NULL) {
        std::cout << "\nСуммы элементов, которых не существует, нет.\n";
    } else {
        while(curr){
            sum = sum + curr->info;
            curr = curr->ssylka;
        }
        std::cout << "\nСумма элементов созданного списка: " << sum << std::endl;
    }

    system("pause");
}